// Generated by view binder compiler. Do not edit!
package com.example.moviestore.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.moviestore.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSettingBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final View divider;

  @NonNull
  public final View divider1;

  @NonNull
  public final TextView labelCategory;

  @NonNull
  public final TextView labelRate;

  @NonNull
  public final TextView labelReleaseYear;

  @NonNull
  public final TextView labelSort;

  @NonNull
  public final TextView textCategory;

  @NonNull
  public final TextView textRate;

  @NonNull
  public final TextView textReleaseYear;

  @NonNull
  public final TextView textSort;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView textView2;

  private FragmentSettingBinding(@NonNull ConstraintLayout rootView, @NonNull View divider,
      @NonNull View divider1, @NonNull TextView labelCategory, @NonNull TextView labelRate,
      @NonNull TextView labelReleaseYear, @NonNull TextView labelSort,
      @NonNull TextView textCategory, @NonNull TextView textRate, @NonNull TextView textReleaseYear,
      @NonNull TextView textSort, @NonNull TextView textView, @NonNull TextView textView2) {
    this.rootView = rootView;
    this.divider = divider;
    this.divider1 = divider1;
    this.labelCategory = labelCategory;
    this.labelRate = labelRate;
    this.labelReleaseYear = labelReleaseYear;
    this.labelSort = labelSort;
    this.textCategory = textCategory;
    this.textRate = textRate;
    this.textReleaseYear = textReleaseYear;
    this.textSort = textSort;
    this.textView = textView;
    this.textView2 = textView2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSettingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSettingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_setting, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSettingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.divider;
      View divider = ViewBindings.findChildViewById(rootView, id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.divider1;
      View divider1 = ViewBindings.findChildViewById(rootView, id);
      if (divider1 == null) {
        break missingId;
      }

      id = R.id.label_category;
      TextView labelCategory = ViewBindings.findChildViewById(rootView, id);
      if (labelCategory == null) {
        break missingId;
      }

      id = R.id.label_rate;
      TextView labelRate = ViewBindings.findChildViewById(rootView, id);
      if (labelRate == null) {
        break missingId;
      }

      id = R.id.label_release_year;
      TextView labelReleaseYear = ViewBindings.findChildViewById(rootView, id);
      if (labelReleaseYear == null) {
        break missingId;
      }

      id = R.id.label_sort;
      TextView labelSort = ViewBindings.findChildViewById(rootView, id);
      if (labelSort == null) {
        break missingId;
      }

      id = R.id.text_category;
      TextView textCategory = ViewBindings.findChildViewById(rootView, id);
      if (textCategory == null) {
        break missingId;
      }

      id = R.id.text_rate;
      TextView textRate = ViewBindings.findChildViewById(rootView, id);
      if (textRate == null) {
        break missingId;
      }

      id = R.id.text_release_year;
      TextView textReleaseYear = ViewBindings.findChildViewById(rootView, id);
      if (textReleaseYear == null) {
        break missingId;
      }

      id = R.id.text_sort;
      TextView textSort = ViewBindings.findChildViewById(rootView, id);
      if (textSort == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      return new FragmentSettingBinding((ConstraintLayout) rootView, divider, divider1,
          labelCategory, labelRate, labelReleaseYear, labelSort, textCategory, textRate,
          textReleaseYear, textSort, textView, textView2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
